{"version":3,"sources":["components/Header.js","assets/icons/left_arrow.svg","store/actions.js","components/Back.js","components/JobType.js","assets/icons/clock.svg","utils/helpers.js","components/PostDate.js","components/CompanyLogo.js","components/CompanyName.js","assets/icons/globe.svg","components/Location.js","components/JobPage.js","components/Banner.js","assets/icons/work.svg","components/Search.js","components/FullTime.js","components/LocationInput.js","components/Filters.js","components/JobCard.js","utils/config.js","components/JobsList.js","assets/icons/chevron_left.svg","assets/icons/chevron_right.svg","components/PageNav.js","components/JobsView.js","components/Controller.js","components/App.js","store/reducer.js","store/store.js","index.js"],"names":["Header","className","loadJobs","jobs","type","changePage","num","Back","dispatch","useDispatch","onClick","src","arrowLeft","JobType","daysSincePost","created_at","postDate","Date","todaysDate","timeDiff","Math","abs","getTime","ceil","PostDate","clockIcon","CompanyLogo","company_logo","CompanyName","company","Location","location","globeIcon","JobPage","useSelector","state","selectedJob","title","description","how_to_apply","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","Banner","children","Search","useState","searchDescription","setSearchDescription","fetchData","fetch","then","res","json","data","JSON","parse","contents","catch","err","console","log","useEffect","onSubmit","e","preventDefault","workIcon","onChange","target","value","placeholder","FullTime","id","htmlFor","LocationInput","input","timeoutId","clearInterval","setTimeout","Filters","JobCard","job","selectJob","window","scroll","top","left","behavior","config","jobsPerPage","JobsList","inputLocation","isFullTime","filters","currentPage","renderedList","R","filter","filterByType","toLowerCase","includes","map","PageNav","pages","range","length","PageBlocks","index","handleClick","chevronLeft","chevronRight","JobsView","setCurrentJob","setCurrentPage","Controller","renderView","init","reducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","ReactDOM","render","App","document","querySelector"],"mappings":"iLAIeA,EAJA,SAAC,GAAsB,IAAD,IAAnBC,iBAAmB,MAAT,GAAS,EACpC,OAAO,oBAAIA,UAAWA,EAAf,0BCDO,MAA0B,uCCK5BC,EAAW,SAAAC,GAAI,MAAK,CAAEC,KAAM,YAAaD,SAKzCE,EAAa,SAAAC,GAAG,MAAK,CAAEF,KAAM,cAAeE,Q,OCQ1CC,EAdF,WACZ,IAAMC,EAAWC,cAKjB,OACC,sBAAKC,QALc,WACnBF,EDA6B,CAACJ,KAAM,eCITH,UAAU,OAArC,UACC,qBAAKU,IAAKC,EAAWX,UAAU,gBAC/B,mDCTYY,EAJC,SAAC,GAAyB,IAAvBT,EAAsB,EAAtBA,KAAMH,EAAgB,EAAhBA,UACxB,OAAO,mBAAGA,UAAS,2BAAsBA,GAAlC,SAAgDG,KCDzC,MAA0B,kCCQ5BU,EAAgB,SAAAC,GAC5B,IAAMC,EAAW,IAAIC,KAAKF,GACpBG,EAAa,IAAID,KAGnBE,EAAWC,KAAKC,IAAIH,EAAWI,UAAYN,EAASM,WAGxD,OAAOF,KAAKG,KAAKJ,EAAQ,QCJXK,EATE,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,WAAYd,EAAgB,EAAhBA,UAC/B,OACC,sBAAKA,UAAS,6BAAwBA,GAAtC,UACC,qBAAKA,UAAU,uBAAuBU,IAAKc,IAC3C,8BAAIX,EAAcC,GAAlB,WCEYW,EATK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAc1B,EAAgB,EAAhBA,UACpC,OACC,qBACCA,UAAS,mCAA8BA,GACvCU,IAAKgB,KCEOC,EANK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAAS5B,EAAgB,EAAhBA,UAC/B,OACC,oBAAIA,UAAS,mCAA8BA,GAA3C,SAAyD4B,KCF5C,MAA0B,kCCW1BC,EATE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACC,sBAAK9B,UAAU,WAAf,UACC,qBAAKA,UAAU,uBAAuBU,IAAKqB,IAC3C,4BAAID,QCuDQE,EAnDC,WAAO,IAAD,EAUjBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAR9BC,EAFoB,EAEpBA,MACAjC,EAHoB,EAGpBA,KACAW,EAJoB,EAIpBA,WACAY,EALoB,EAKpBA,aACAE,EANoB,EAMpBA,QACAE,EAPoB,EAOpBA,SACAO,EARoB,EAQpBA,YACAC,EAToB,EASpBA,aAGD,OACC,sBAAKtC,UAAU,UAAf,UACC,cAAC,EAAD,CAAQA,UAAU,oBAClB,sBAAKA,UAAU,mBAAf,UACC,cAAC,EAAD,IACA,8CACA,mBACCA,UAAU,mBACVuC,wBAAyB,CACxBC,OAAQC,IAAUC,SAASJ,SAI9B,sBAAKtC,UAAU,2BAAf,UACC,sBAAKA,UAAU,0BAAf,UACC,sBAAKA,UAAU,oBAAf,UACC,oBAAIA,UAAU,iBAAd,SAAgCoC,IAChC,cAAC,EAAD,CAASjC,KAAMA,EAAMH,UAAU,eAEhC,cAAC,EAAD,CAAUc,WAAYA,EAAYd,UAAU,eAE7C,sBAAKA,UAAU,mBAAf,UACC,cAAC,EAAD,CAAa0B,aAAcA,EAAc1B,UAAU,OACnD,gCACC,cAAC,EAAD,CAAa4B,QAASA,EAAS5B,UAAU,QACzC,cAAC,EAAD,CAAU8B,SAAUA,UAGtB,qBACC9B,UAAU,uBACVuC,wBAAyB,CACxBC,OAAQC,IAAUC,SAASL,aCjDlBM,EAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,qBAAK5C,UAAU,SAAf,SAAyB4C,K,eCDlB,MAA0B,iCC2D1BC,EArDA,WAAO,IAAD,EAC8BC,mBAAS,IADvC,mBACbC,EADa,KACMC,EADN,KAEdzC,EAAWC,cAEXyC,EAAY,WAA6B,IAA5BF,EAA2B,uDAAP,GACtCG,MAAM,oFAAD,OACgFH,IAEnFI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIC,KAAKC,MAAMF,EAAKG,aAC7BN,MAAK,SAAAjD,GACLK,EAASN,EAASC,OAUlBwD,OAAM,SAAAC,GACNC,QAAQC,IAAIF,OAIfG,qBAAU,WACTb,EAAUF,KACR,IAOH,OACC,qBAAK/C,UAAU,SAAf,SACC,uBAAMA,UAAU,eAAe+D,SAPZ,SAAAC,GACpBA,EAAEC,iBACFhB,EAAUF,IAKT,UACC,sBAAK/C,UAAU,0BAAf,UACC,qBAAKA,UAAU,oBAAoBU,IAAKwD,IACxC,uBACCC,SAAU,SAAAH,GAAC,OAAIhB,EAAqBgB,EAAEI,OAAOC,QAC7CA,MAAOtB,EACP/C,UAAU,gBACVsE,YAAY,+CAGd,wBAAQtE,UAAU,cAAlB,0BC9BWuE,EApBE,WAChB,IAAMhE,EAAWC,cAMjB,OACC,sBAAKR,UAAU,WAAf,UACC,uBACCA,UAAU,qBACVG,KAAK,WACLqE,GAAG,WACHL,SAVoB,SAAAH,GACtBzD,EdNmC,CAAEJ,KAAM,uBciB1C,uBAAOsE,QAAQ,WAAf,0BCcYC,EA5BO,WACrB,IAAMnE,EAAWC,cACXmE,EAAQ1C,aAAY,SAAAC,GAAK,OAAIA,EAAMJ,YACrC8C,EAAY,KAShB,OACC,sBAAK5E,UAAU,gBAAf,UACC,uBAAOA,UAAU,uBAAjB,sBACA,sBAAKA,UAAU,iCAAf,UACC,qBAAKA,UAAU,4BAA4BU,IAAKqB,IAChD,uBACC/B,UAAU,uBACVsE,YAAY,0BACZD,MAAOM,EACPR,SAhBgB,SAAAH,GACnBa,cAAcD,GACdA,EAAYE,YAAW,WACtBvE,EfVqC,CAAEJ,KAAM,eAAgB2B,SeUxCkC,EAAEI,OAAOC,UAC5B,eCDUU,EATC,WACf,OACC,sBAAK/E,UAAU,UAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,QCgCYgF,EA/BC,SAAC,GAGV,IAAD,IAFLC,IAAOvD,EAEF,EAFEA,aAAcE,EAEhB,EAFgBA,QAASQ,EAEzB,EAFyBA,MAAOjC,EAEhC,EAFgCA,KAAM2B,EAEtC,EAFsCA,SAAUhB,EAEhD,EAFgDA,WACrDmE,EACK,EADLA,IAEM1E,EAAWC,cAWjB,OACC,qBAAIR,UAAU,UAAUS,QAVL,WACnBF,EjBTuB,SAAA0E,GAAG,MAAK,CAAC9E,KAAM,aAAc8E,OiBS3CC,CAAUD,IACnBE,OAAOC,OAAO,CACbC,IAAK,EACLC,KAAM,EACNC,SAAU,YAKX,UACC,cAAC,EAAD,CAAa7D,aAAcA,EAAc1B,UAAU,QACnD,sBAAKA,UAAU,wBAAf,UACC,cAAC,EAAD,CAAa4B,QAASA,EAAS5B,UAAU,OACzC,6BAAKoC,IACL,cAAC,EAAD,CAASjC,KAAMA,OAEhB,sBAAKH,UAAU,0BAAf,UACC,cAAC,EAAD,CAAU8B,SAAUA,IACpB,cAAC,EAAD,CAAUhB,WAAYA,W,gBC7BX0E,EAJA,CACdC,YAAa,GCwBCC,EAnBE,WAAO,IAAD,EfHSC,EeIzBzF,EAAO+B,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,QAClC0F,EAAa3D,aAAY,SAAAC,GAAK,OAAIA,EAAM2D,QAAQD,cAChD9D,EAAWG,aAAY,SAAAC,GAAK,OAAIA,EAAM2D,QAAQ/D,YAC9CgE,EAAc7D,aAAY,SAAAC,GAAK,OAAIA,EAAM4D,eAQzCC,EAAY,UANJC,IfZa,SAAAJ,GAAU,OAAI,SAAA1F,GAAI,OAC7C0F,EAAa1F,EAAK+F,QAAO,SAAAhB,GAAG,MAAiB,cAAbA,EAAI9E,QAAwBD,GeY3DgG,CAAaN,IfViBD,EeWb7D,EfX8B,SAAA5B,GAAI,OACpDA,EAAK+F,QAAO,SAAAhB,GAAG,OACdA,EAAInD,SAASqE,cAAcC,SAAST,EAAcQ,oBeUlDH,IAAaR,EAAOC,aAHPO,CAIZ9F,GAEyB4F,UAAT,aAAG,EAAoBO,KAAI,SAAApB,GAC5C,OAAO,cAAC,EAAD,CAAsBA,IAAKA,GAAbA,EAAIT,OAG1B,OAAO,oBAAIxE,UAAU,WAAd,SAA0B+F,KCtBnB,MAA0B,yCCA1B,MAA0B,0C,QC8D1BO,EAvDC,WACf,IAAM/F,EAAWC,cACXN,EAAO+B,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,QAClC4F,EAAc7D,aAAY,SAAAC,GAAK,OAAIA,EAAM4D,eACzCS,EAAQC,YAAM,EAAGtG,EAAKuG,OAASjB,EAAOC,aAoBtCiB,EAAaH,EAAMF,KAAI,SAACpB,EAAK0B,GAClC,OACC,qBACC3G,UAAS,0BACR2G,IAAUb,GAAe,UAE1BrF,QAAS,kBAVQ,SAAAkG,GACnBpG,EtBjB6B,CAAEJ,KAAM,WAAYE,IsBiBhCsG,IASAC,CAAYD,IAJ5B,SAOC,+BAAOA,EAAQ,KAFVA,MAOR,OACC,sBAAK3G,UAAU,UAAf,UACC,qBACCU,IAAKmG,EACL7G,UAAU,gBACVS,QA9BgB,WACE,IAAhBqF,GAGJvF,EAASH,GAAY,OA4BnBsG,EACD,qBACChG,IAAKoG,EACL9G,UAAU,gBACVS,QA3CgB,WACdqF,IAAgBS,EAAME,OAAS,GAGnClG,EAASH,EAAW,WCGP2G,EAjBE,SAAC,GAA2D,IAAzDR,EAAwD,EAAxDA,MAAOS,EAAiD,EAAjDA,cAAelB,EAAkC,EAAlCA,YAAamB,EAAqB,EAArBA,eACtD,OACC,sBAAKjH,UAAU,WAAf,UACC,cAAC,EAAD,CACCuG,MAAOA,EACPT,YAAaA,EACbkB,cAAeA,IAEhB,cAAC,EAAD,CACCT,MAAOA,EACPT,YAAaA,EACbmB,eAAgBA,QCGLC,EAZI,WAClB,OACC,sBAAKlH,UAAU,aAAf,UACC,cAAC,EAAD,UACC,cAAC,EAAD,MAED,cAAC,EAAD,IACA,cAAC,EAAD,QCNY,aACd,IAAMmC,EAAcF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAEzCgF,EAAanB,IAAU7D,GAC5B,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,OAGD,cAAC,EAAD,IAGD,OAAO,qBAAKnC,UAAU,MAAf,SAAsBmH,K,sBClBxBC,EAAO,CACZvB,QAAS,CACRD,YAAY,EACZ9D,SAAU,IAEX5B,KAAM,GACNiC,YAAa,GACb2D,YAAa,GA4DCuB,EAxDC,WAA2B,IAA1BnF,EAAyB,uDAAjBkF,EAAME,EAAW,uCACzC,OAAQA,EAAOnH,MACd,IAAK,kBACJ,OAAO,2BACH+B,GADJ,IAEC2D,QAAQ,2BACJ3D,EAAM2D,SADH,IAEND,YAAa1D,EAAM2D,QAAQD,eAG9B,IAAK,eACJ,OAAO,2BACH1D,GADJ,IAEC2D,QAAQ,2BACJ3D,EAAM2D,SADH,IAEN/D,SAAUwF,EAAOxF,WAElBgE,YAAa,IAGf,IAAK,YACJ,OAAO,2BACH5D,GADJ,IAEChC,KAAMoH,EAAOpH,KACb4F,YAAa,IAGf,IAAK,aACJ,OAAO,2BACH5D,GADJ,IAECC,YAAamF,EAAOrC,MAGtB,IAAK,YACJ,OAAO,2BACH/C,GADJ,IAECC,YAAa,KAGf,IAAK,cACJ,OAAO,2BACHD,GADJ,IAEC4D,YAAa5D,EAAM4D,YAAcwB,EAAOjH,MAG1C,IAAK,WACJ,OAAO,2BACH6B,GADJ,IAEC4D,YAAawB,EAAOjH,MAGtB,QACC,OAAO6B,IC5DJqF,EAAQC,YACbH,EACAlC,OAAOsC,8BAAgCtC,OAAOsC,gCAE/CF,EAAMG,WAAU,WACf9D,QAAQC,IAAI0D,EAAMI,eAGJJ,QCLfK,IAASC,OACR,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACC,cAACO,EAAD,MAEDC,SAASC,cAAc,Y","file":"static/js/main.74d0078e.chunk.js","sourcesContent":["const Header = ({ className=\"\" }) => {\n\treturn <h1 className={className}>Github Jobs</h1>;\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/left_arrow.5548463e.svg\";","// FILTERS\nexport const toggleFullTime = () => ({ type: \"TOGGLE_FULLTIME\" });\nexport const setLocation = location => ({ type: \"SET_LOCATION\", location });\n\n// JOBS\nexport const loadJobs = jobs => ({ type: \"LOAD_JOBS\", jobs });\nexport const selectJob = job => ({type: \"SELECT_JOB\", job})\nexport const clearJob = () => ({type: 'CLEAR_JOB'})\n\n// PAGE NAV\nexport const changePage = num => ({ type: \"CHANGE_PAGE\", num });\nexport const setPage = num => ({ type: \"SET_PAGE\", num })","import arrowLeft from \"assets/icons/left_arrow.svg\";\nimport { clearJob } from \"store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Back = () => {\n\tconst dispatch = useDispatch();\n\tconst handleClick = () => {\n\t\tdispatch(clearJob());\n\t};\n\n\treturn (\n\t\t<div onClick={handleClick} className=\"Back\">\n\t\t\t<img src={arrowLeft} className=\"Back__arrow\" />\n\t\t\t<p>Back to search</p>\n\t\t</div>\n\t);\n};\n\nexport default Back;\n","const JobType = ({ type, className }) => {\n\treturn <p className={`JobType JobType--${className}`}>{type}</p>;\n};\n\nexport default JobType;\n","export default __webpack_public_path__ + \"static/media/clock.12a9be42.svg\";","export const filterByType = isFullTime => jobs =>\n\tisFullTime ? jobs.filter(job => job.type === \"Full Time\") : jobs;\n\nexport const filterByLocation = inputLocation => jobs =>\n\tjobs.filter(job =>\n\t\tjob.location.toLowerCase().includes(inputLocation.toLowerCase())\n\t);\n\nexport const daysSincePost = created_at => {\n\tconst postDate = new Date(created_at);\n\tconst todaysDate = new Date();\n\n\t// time difference\n\tvar timeDiff = Math.abs(todaysDate.getTime() - postDate.getTime());\n\n\t// days difference\n\treturn Math.ceil(timeDiff / (1000 * 3600 * 24));\n};\n\nexport const fetchData = (setJobs, searchDescription = \"\") => {\n\tfetch(\n\t\t`https://api.allorigins.win/get?url=https://jobs.github.com/positions.json?search=${searchDescription}`\n\t)\n\t\t.then(res => res.json())\n\t\t.then(data => JSON.parse(data.contents))\n\t\t.then(jobs => setJobs(jobs))\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t});\n};\n","import clockIcon from 'assets/icons/clock.svg'\nimport {daysSincePost} from 'utils/helpers'\n\nconst PostDate = ({ created_at, className }) => {\n\treturn (\n\t\t<div className={`PostDate PostDate--${className}`}>\n\t\t\t<img className=\"PostDate__clock-icon\" src={clockIcon} />\n\t\t\t<p>{daysSincePost(created_at)}d</p>\n\t\t</div>\n\t);\n};\n\nexport default PostDate;\n","const CompanyLogo = ({ company_logo, className }) => {\n\treturn (\n\t\t<img\n\t\t\tclassName={`CompanyLogo CompanyLogo--${className}`}\n\t\t\tsrc={company_logo}\n\t\t/>\n\t);\n};\n\nexport default CompanyLogo;\n","const CompanyName = ({ company, className }) => {\n\treturn (\n\t\t<h3 className={`CompanyName CompanyName--${className}`}>{company}</h3>\n\t);\n};\n\nexport default CompanyName;\n","export default __webpack_public_path__ + \"static/media/globe.7cffc040.svg\";","import globeIcon from 'assets/icons/globe.svg'\n\nconst Location = ({ location }) => {\n\treturn (\n\t\t<div className=\"Location\">\n\t\t\t<img className=\"Location__globe-icon\" src={globeIcon} />\n\t\t\t<p>{location}</p>\n\t\t</div>\n\t);\n};\n\nexport default Location;","import DOMPurify from \"dompurify\";\nimport Header from \"components/Header\";\nimport Back from \"components/Back\";\nimport JobType from \"components/JobType\";\nimport PostDate from \"components/PostDate\";\nimport CompanyLogo from \"components/CompanyLogo\";\nimport CompanyName from \"components/CompanyName\";\nimport Location from \"components/Location\";\nimport { useSelector } from \"react-redux\";\n\nconst JobPage = () => {\n\tconst {\n\t\ttitle,\n\t\ttype,\n\t\tcreated_at,\n\t\tcompany_logo,\n\t\tcompany,\n\t\tlocation,\n\t\tdescription,\n\t\thow_to_apply,\n\t} = useSelector(state => state.selectedJob);\n\n\treturn (\n\t\t<div className=\"JobPage\">\n\t\t\t<Header className=\"JobPage__header\" />\n\t\t\t<div className=\"JobPage__contact\">\n\t\t\t\t<Back />\n\t\t\t\t<h4>How to apply</h4>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"JobPage__contact\"\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: DOMPurify.sanitize(how_to_apply),\n\t\t\t\t\t}}\n\t\t\t\t></p>\n\t\t\t</div>\n\t\t\t<div className=\"JobPage__job-description\">\n\t\t\t\t<div className=\"JobPage__header-content\">\n\t\t\t\t\t<div className=\"JobPage__flex-grp\">\n\t\t\t\t\t\t<h2 className=\"JobPage__title\">{title}</h2>\n\t\t\t\t\t\t<JobType type={type} className=\"JobPage\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<PostDate created_at={created_at} className=\"JobPage\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"JobPage__company\">\n\t\t\t\t\t<CompanyLogo company_logo={company_logo} className=\"sm\" />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CompanyName company={company} className=\"reg\" />\n\t\t\t\t\t\t<Location location={location} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"JobPage__description\"\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: DOMPurify.sanitize(description),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default JobPage;\n","const Banner = ({ children }) => {\n\treturn <div className=\"Banner\">{children}</div>;\n};\n\nexport default Banner;","export default __webpack_public_path__ + \"static/media/work.7bcd0362.svg\";","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport workIcon from \"assets/icons/work.svg\";\nimport { loadJobs } from \"store/actions\";\nimport { useEffect } from \"react\";\n\nconst Search = () => {\n\tconst [searchDescription, setSearchDescription] = useState(\"\");\n\tconst dispatch = useDispatch();\n\n\tconst fetchData = (searchDescription = \"\") => {\n\t\tfetch(\n\t\t\t`https://api.allorigins.win/get?url=https://jobs.github.com/positions.json?search=${searchDescription}`\n\t\t)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => JSON.parse(data.contents))\n\t\t\t.then(jobs => {\n\t\t\t\tdispatch(loadJobs(jobs));\n\n\t\t\t\t// console.log(addPages);\n\t\t\t\t// // dispatch(addPages(R.splitEvery(config.jobsPerPage)(jobs)))\n\t\t\t\t// R.pipe(\n\t\t\t\t// \tR.splitEvery(config.jobsPerPage),\n\t\t\t\t// \taddPages,\n\t\t\t\t// \tdispatch\n\t\t\t\t// )(jobs)\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tfetchData(searchDescription);\n\t}, []);\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tfetchData(searchDescription);\n\t};\n\n\treturn (\n\t\t<div className=\"Search\">\n\t\t\t<form className=\"Search__form\" onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"Search__input-container\">\n\t\t\t\t\t<img className=\"Search__work-icon\" src={workIcon} />\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={e => setSearchDescription(e.target.value)}\n\t\t\t\t\t\tvalue={searchDescription}\n\t\t\t\t\t\tclassName=\"Search__input\"\n\t\t\t\t\t\tplaceholder=\"Title, companies, expertise or benefits\"\n\t\t\t\t\t></input>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"Search__btn\">Search</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Search;\n","import { toggleFullTime } from \"store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst FullTime = () => {\n\tconst dispatch = useDispatch();\n\n\tconst handleCheckbox = e => {\n\t\tdispatch(toggleFullTime());\n\t};\n\n\treturn (\n\t\t<div className=\"FullTime\">\n\t\t\t<input\n\t\t\t\tclassName=\"FullTime__checkbox\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid=\"Fulltime\"\n\t\t\t\tonChange={handleCheckbox}\n\t\t\t/>\n\t\t\t<label htmlFor=\"Fulltime\">Fulltime</label>\n\t\t</div>\n\t);\n};\n\nexport default FullTime;\n","import globeIcon from \"assets/icons/globe.svg\";\nimport { setLocation } from \"store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst LocationInput = () => {\n\tconst dispatch = useDispatch();\n\tconst input = useSelector(state => state.location);\n\tlet timeoutId = null;\n\n\tconst handleInput = e => {\n\t\tclearInterval(timeoutId);\n\t\ttimeoutId = setTimeout(() => {\n\t\t\tdispatch(setLocation(e.target.value));\n\t\t}, 400);\n\t};\n\n\treturn (\n\t\t<div className=\"LocationInput\">\n\t\t\t<label className=\"LocationInput__label\">Location</label>\n\t\t\t<div className=\"LocationInput__input-container\">\n\t\t\t\t<img className=\"LocationInput__globe-icon\" src={globeIcon} />\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"LocationInput__input\"\n\t\t\t\t\tplaceholder=\"City, state, or country\"\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={handleInput}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LocationInput;\n","import FullTime from \"components/FullTime\";\nimport LocationInput from \"components/LocationInput\";\n\nconst Filters = () => {\n\treturn (\n\t\t<div className=\"Filters\">\n\t\t\t<FullTime />\n\t\t\t<LocationInput />\n\t\t</div>\n\t);\n};\n\nexport default Filters;\n","import CompanyLogo from \"components/CompanyLogo\";\nimport CompanyName from \"components/CompanyName\";\nimport JobType from \"components/JobType\";\nimport Location from \"components/Location\";\nimport PostDate from \"components/PostDate\";\nimport { useDispatch } from \"react-redux\";\nimport { selectJob } from \"store/actions\";\n\nconst JobCard = ({\n\tjob: { company_logo, company, title, type, location, created_at },\n\tjob,\n}) => {\n\tconst dispatch = useDispatch();\n\n\tconst handleClick = () => {\n\t\tdispatch(selectJob(job));\n\t\twindow.scroll({\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tbehavior: \"smooth\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<li className=\"JobCard\" onClick={handleClick}>\n\t\t\t<CompanyLogo company_logo={company_logo} className=\"reg\" />\n\t\t\t<div className=\"JobCard__primary-info\">\n\t\t\t\t<CompanyName company={company} className=\"sm\" />\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<JobType type={type} />\n\t\t\t</div>\n\t\t\t<div className=\"JobCard__secondary-info\">\n\t\t\t\t<Location location={location} />\n\t\t\t\t<PostDate created_at={created_at} />\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default JobCard;\n","const config = {\n\tjobsPerPage: 5,\n};\n\nexport default config;","import JobCard from \"components/JobCard\";\nimport { useSelector } from \"react-redux\";\nimport * as R from \"ramda\";\nimport { filterByType, filterByLocation } from \"utils/helpers\";\nimport config from \"utils/config\";\n\nconst JobsList = () => {\n\tconst jobs = useSelector(state => state.jobs);\n\tconst isFullTime = useSelector(state => state.filters.isFullTime);\n\tconst location = useSelector(state => state.filters.location);\n\tconst currentPage = useSelector(state => state.currentPage);\n\n\tconst pages = R.pipe(\n\t\tfilterByType(isFullTime),\n\t\tfilterByLocation(location),\n\t\tR.splitEvery(config.jobsPerPage)\n\t)(jobs);\n\n\tconst renderedList = pages[currentPage]?.map(job => {\n\t\treturn <JobCard key={job.id} job={job} />;\n\t});\n\n\treturn <ul className=\"JobsList\">{renderedList}</ul>;\n};\n\nexport default JobsList;\n","export default __webpack_public_path__ + \"static/media/chevron_left.79c0cebb.svg\";","export default __webpack_public_path__ + \"static/media/chevron_right.21a91ffd.svg\";","import chevronLeft from \"assets/icons/chevron_left.svg\";\nimport chevronRight from \"assets/icons/chevron_right.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changePage, setPage } from \"store/actions\";\nimport { range } from \"ramda\";\nimport config from \"utils/config\";\n\nconst PageNav = () => {\n\tconst dispatch = useDispatch();\n\tconst jobs = useSelector(state => state.jobs);\n\tconst currentPage = useSelector(state => state.currentPage);\n\tconst pages = range(0, jobs.length / config.jobsPerPage);\n\n\tconst handleNext = () => {\n\t\tif (currentPage === pages.length - 1) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(changePage(1));\n\t};\n\n\tconst handlePrev = () => {\n\t\tif (currentPage === 0) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(changePage(-1));\n\t};\n\n\tconst handleClick = index => {\n\t\tdispatch(setPage(index));\n\t};\n\n\tconst PageBlocks = pages.map((job, index) => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`PageNav__number ${\n\t\t\t\t\tindex === currentPage && \"active\"\n\t\t\t\t}`}\n\t\t\t\tonClick={() => handleClick(index)}\n\t\t\t\tkey={index}\n\t\t\t>\n\t\t\t\t<span>{index + 1}</span>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className=\"PageNav\">\n\t\t\t<img\n\t\t\t\tsrc={chevronLeft}\n\t\t\t\tclassName=\"PageNav__icon\"\n\t\t\t\tonClick={handlePrev}\n\t\t\t/>\n\t\t\t{PageBlocks}\n\t\t\t<img\n\t\t\t\tsrc={chevronRight}\n\t\t\t\tclassName=\"PageNav__icon\"\n\t\t\t\tonClick={handleNext}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default PageNav;\n","import JobsList from \"components/JobsList\";\nimport PageNav from \"components/PageNav\";\n\nconst JobsView = ({ pages, setCurrentJob, currentPage, setCurrentPage }) => {\n\treturn (\n\t\t<div className=\"JobsView\">\n\t\t\t<JobsList\n\t\t\t\tpages={pages}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tsetCurrentJob={setCurrentJob}\n\t\t\t/>\n\t\t\t<PageNav\n\t\t\t\tpages={pages}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tsetCurrentPage={setCurrentPage}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default JobsView;\n","import Banner from \"components/Banner\";\nimport Search from \"components/Search\";\nimport Filters from \"components/Filters\";\nimport JobsView from \"components/JobsView\";\n\nconst Controller = () => {\n\treturn (\n\t\t<div className=\"Controller\">\n\t\t\t<Banner>\n\t\t\t\t<Search />\n\t\t\t</Banner>\n\t\t\t<Filters />\n\t\t\t<JobsView />\n\t\t</div>\n\t);\n};\n\nexport default Controller;\n","import * as R from \"ramda\";\nimport JobPage from \"components/JobPage\";\nimport Header from \"components/Header\";\nimport Controller from \"components/Controller\";\nimport { useSelector } from \"react-redux\";\n\nexport default () => {\n\tconst selectedJob = useSelector(state => state.selectedJob);\n\n\tconst renderView = R.isEmpty(selectedJob) ? (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Controller />\n\t\t</>\n\t) : (\n\t\t<JobPage />\n\t);\n\n\treturn <div className=\"App\">{renderView}</div>;\n};\n","const init = {\n\tfilters: {\n\t\tisFullTime: false,\n\t\tlocation: \"\",\n\t},\n\tjobs: [],\n\tselectedJob: {},\n\tcurrentPage: 0,\n};\n\n// REDUCER\nconst reducer = (state = init, action) => {\n\tswitch (action.type) {\n\t\tcase \"TOGGLE_FULLTIME\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilters: {\n\t\t\t\t\t...state.filters,\n\t\t\t\t\tisFullTime: !state.filters.isFullTime,\n\t\t\t\t},\n\t\t\t};\n\t\tcase \"SET_LOCATION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilters: {\n\t\t\t\t\t...state.filters,\n\t\t\t\t\tlocation: action.location,\n\t\t\t\t},\n\t\t\t\tcurrentPage: 0,\n\t\t\t};\n\n\t\tcase \"LOAD_JOBS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjobs: action.jobs,\n\t\t\t\tcurrentPage: 0,\n\t\t\t};\n\n\t\tcase \"SELECT_JOB\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedJob: action.job,\n\t\t\t};\n\n\t\tcase \"CLEAR_JOB\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedJob: {},\n\t\t\t};\n\n\t\tcase \"CHANGE_PAGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: state.currentPage + action.num,\n\t\t\t};\n\n\t\tcase \"SET_PAGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.num,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n\treducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nstore.subscribe(() => {\n\tconsole.log(store.getState());\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"css/index.css\";\nimport { Provider } from \"react-redux\";\nimport store from 'store/store'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.querySelector(\"#root\")\n);\n"],"sourceRoot":""}